{"version":3,"sources":["isSorted.js"],"names":["isSorted","array","every","item","index","current","i","next","undefined","t","is"],"mappings":";;AAeA;;AAfA;;AAEA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAOA,MAAMC,KAAN,CAAY,UAASC,IAAT,EAAeC,KAAf,EAAsB;AACvC,QAAIC,UAAUJ,MAAMK,CAAN,CAAd;AACA,QAAIC,OAAON,MAAMK,IAAI,CAAV,CAAX;AACA,QAAIC,SAASC,SAAb,EAAwB;AACtB,aAAO,IAAP;AACD;AACD,WAAOD,OAAOF,OAAd;AACD,GAPM,CAAP;AAQD;;AAED;;AAIA,eAAKI,KAAKA,EAAEC,EAAF,CAAKV,SAAS,EAAT,CAAL,EAAmB,IAAnB,CAAV;AACA,eAAKS,KAAKA,EAAEC,EAAF,CAAKV,SAAS,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAT,CAAL,EAAkC,IAAlC,CAAV;AACA,eAAKS,KAAKA,EAAEC,EAAF,CAAKV,SAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,EAAX,CAAT,CAAL,EAA+B,KAA/B,CAAV","file":"isSorted.js","sourcesContent":["/// solution\n\nfunction isSorted(array) {\n  return array.every(function(item, index) {\n    let current = array[i]\n    let next = array[i + 1]\n    if (next === undefined) {\n      return true\n    }\n    return next > current\n  })\n}\n\n/// tests\n\nimport { test } from 'ava'\n\ntest(t => t.is(isSorted([]), true))\ntest(t => t.is(isSorted([-9, -5, 0, 3, 9]), true))\ntest(t => t.is(isSorted([3, 9, -3, 10]), false))\n"]}
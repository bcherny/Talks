{"version":3,"sources":["isSorted.js"],"names":["isSorted","array","i","length","current","next","undefined","t","is"],"mappings":";;AAeA;;AAfA;;AAEA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,MAAME,MAA1B,EAAkCD,GAAlC,EAAuC;AACrC,QAAIE,UAAUH,MAAMC,CAAN,CAAd;AACA,QAAIG,OAAOJ,MAAMC,IAAI,CAAV,CAAX;AACA,QAAIG,SAASC,SAAT,IAAsBF,UAAUC,IAApC,EAA0C;AACxC,aAAO,KAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;;AAED;;AAIA,eAAKE,KAAKA,EAAEC,EAAF,CAAKR,SAAS,EAAT,CAAL,EAAmB,IAAnB,CAAV;AACA,eAAKO,KAAKA,EAAEC,EAAF,CAAKR,SAAS,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAT,CAAL,EAAkC,IAAlC,CAAV;AACA,eAAKO,KAAKA,EAAEC,EAAF,CAAKR,SAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,EAAX,CAAT,CAAL,EAA+B,KAA/B,CAAV","file":"isSorted.js","sourcesContent":["/// solution\n\nfunction isSorted(array) {\n  for (let i = 0; i < array.length; i++) {\n    let current = array[i]\n    let next = array[i + 1]\n    if (next !== undefined && current > next) {\n      return false\n    }\n  }\n  return true\n}\n\n/// tests\n\nimport { test } from 'ava'\n\ntest(t => t.is(isSorted([]), true))\ntest(t => t.is(isSorted([-9, -5, 0, 3, 9]), true))\ntest(t => t.is(isSorted([3, 9, -3, 10]), false))\n"]}
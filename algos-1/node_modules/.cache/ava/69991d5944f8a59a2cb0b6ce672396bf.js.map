{"version":3,"sources":["isSorted.js"],"names":["isSorted","array","current","next","length","slice","t","is"],"mappings":";;AAkBA;;AAlBA;;AAEA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAIC,UAAUD,MAAM,CAAN,CAAd;AACA,MAAIE,OAAOF,MAAM,CAAN,CAAX;AACA,UAAQA,MAAMG,MAAd;AACE,SAAK,CAAL;AAAQ,aAAO,IAAP;AACR,SAAK,CAAL;AAAQ,aAAO,IAAP;AACR;AACE,UAAID,OAAOD,OAAX,EAAoB;AAClB,eAAO,KAAP;AACD;AACD,aAAOF,SAASC,MAAMI,KAAN,CAAY,CAAZ,CAAT,CAAP;AAPJ;AASD;;AAED;;AAIA,eAAKC,KAAKA,EAAEC,EAAF,CAAKP,SAAS,EAAT,CAAL,EAAmB,IAAnB,CAAV;AACA,eAAKM,KAAKA,EAAEC,EAAF,CAAKP,SAAS,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAT,CAAL,EAAkC,IAAlC,CAAV;AACA,eAAKM,KAAKA,EAAEC,EAAF,CAAKP,SAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,EAAX,CAAT,CAAL,EAA+B,KAA/B,CAAV","file":"isSorted.js","sourcesContent":["/// solution\n\nfunction isSorted(array) {\n  let current = array[0]\n  let next = array[1]\n  switch (array.length) {\n    case 0: return true\n    case 1: return true\n    default:\n      if (next < current) {\n        return false\n      }\n      return isSorted(array.slice(1))\n  }\n}\n\n/// tests\n\nimport { test } from 'ava'\n\ntest(t => t.is(isSorted([]), true))\ntest(t => t.is(isSorted([-9, -5, 0, 3, 9]), true))\ntest(t => t.is(isSorted([3, 9, -3, 10]), false))\n"]}
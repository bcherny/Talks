{"version":3,"sources":["isSorted.js"],"names":["isSorted","array","current","next","undefined","slice","t","is"],"mappings":";;AAgBA;;AAhBA;;AAEA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAIC,UAAUD,MAAM,CAAN,CAAd;AACA,MAAIE,OAAOF,MAAM,CAAN,CAAX;AACA,MAAIE,SAASC,SAAb,EAAwB;AACtB,WAAO,IAAP;AACD;AACD,MAAID,OAAOD,OAAX,EAAoB;AAClB,WAAO,KAAP;AACD;AACD,SAAOF,SAASC,MAAMI,KAAN,CAAY,CAAZ,CAAT,CAAP;AACD;;AAED;;AAIA,eAAKC,KAAKA,EAAEC,EAAF,CAAKP,SAAS,EAAT,CAAL,EAAmB,IAAnB,CAAV;AACA,eAAKM,KAAKA,EAAEC,EAAF,CAAKP,SAAS,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAT,CAAL,EAAkC,IAAlC,CAAV;AACA,eAAKM,KAAKA,EAAEC,EAAF,CAAKP,SAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,EAAX,CAAT,CAAL,EAA+B,KAA/B,CAAV","file":"isSorted.js","sourcesContent":["/// solution\n\nfunction isSorted(array) {\n  let current = array[0]\n  let next = array[1]\n  if (next === undefined) {\n    return true\n  }\n  if (next < current) {\n    return false\n  }\n  return isSorted(array.slice(1))\n}\n\n/// tests\n\nimport { test } from 'ava'\n\ntest(t => t.is(isSorted([]), true))\ntest(t => t.is(isSorted([-9, -5, 0, 3, 9]), true))\ntest(t => t.is(isSorted([3, 9, -3, 10]), false))\n"]}
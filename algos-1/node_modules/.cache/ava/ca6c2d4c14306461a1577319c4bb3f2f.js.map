{"version":3,"sources":["isSorted.js"],"names":["isSorted","array","length","slice","t","is"],"mappings":";;AAeA;;AAfA;;AAEA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,UAAQA,MAAMC,MAAd;AACE,SAAK,CAAL;AAAQ,aAAO,IAAP;AACR;AACE,UAAID,MAAM,CAAN,IAAWA,MAAM,CAAN,CAAf,EAAyB;AACvB,eAAO,KAAP;AACD;AACD,aAAOD,SAASC,MAAME,KAAN,CAAY,CAAZ,CAAT,CAAP;AANJ;AAQD;;AAED;;AAIA,eAAKC,KAAKA,EAAEC,EAAF,CAAKL,SAAS,EAAT,CAAL,EAAmB,IAAnB,CAAV;AACA,eAAKI,KAAKA,EAAEC,EAAF,CAAKL,SAAS,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAT,CAAL,EAAkC,IAAlC,CAAV;AACA,eAAKI,KAAKA,EAAEC,EAAF,CAAKL,SAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,EAAX,CAAT,CAAL,EAA+B,KAA/B,CAAV","file":"isSorted.js","sourcesContent":["/// solution\n\nfunction isSorted(array) {\n  switch (array.length) {\n    case 0: return true\n    default:\n      if (array[1] < array[0]) {\n        return false\n      }\n      return isSorted(array.slice(1))\n  }\n}\n\n/// tests\n\nimport { test } from 'ava'\n\ntest(t => t.is(isSorted([]), true))\ntest(t => t.is(isSorted([-9, -5, 0, 3, 9]), true))\ntest(t => t.is(isSorted([3, 9, -3, 10]), false))\n"]}